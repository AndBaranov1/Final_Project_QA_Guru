plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "6.0.0-m2"
}

repositories {
    mavenCentral()
}

compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

def allureVersion = "2.21.0",
    assertJVersion = "3.24.2",
    restAssuredVersion = "5.3.0",
    appiumJavaClientVersion = "8.3.0",
    jacksonDatabindVersion = "2.14.2",
    javaFakerVersion = "1.0.2",
    junitJupiterVersion = "5.9.2",
    lombokVersion = "1.18.26",
    ownerVersion = "1.0.12",
    selenideVersion = "6.13.0",
    slf4jVersion = "2.0.7"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation (
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.assertj:assertj-core:$assertJVersion",
            "com.fasterxml.jackson.core:jackson-databind:$jacksonDatabindVersion",
            "io.appium:java-client:$appiumJavaClientVersion",
            "com.github.javafaker:javafaker:$javaFakerVersion",
            "org.junit.jupiter:junit-jupiter:$junitJupiterVersion",
            "org.projectlombok:lombok:$lombokVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "com.codeborne:selenide:$selenideVersion",
            "com.google.code.gson:gson:2.10.1",
            'io.github.bonigarcia:webdrivermanager:5.2.1',
            'com.fasterxml.jackson.core:jackson-core:2.14.2',
            'org.junit.jupiter:junit-jupiter-api:5.6.2',
            'io.qameta.allure:allure-junit5:2.18.1',
            'com.codeborne:pdf-test:1.5.0',
            'com.codeborne:xls-test:1.4.3',
            'com.opencsv:opencsv:5.7.1',
            "org.slf4j:slf4j-simple:$slf4jVersion"
    )
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task web_test(type: Test) {
    useJUnitPlatform {
        includeTags("web")
    }
}
task api_test(type: Test) {
    useJUnitPlatform {
        includeTags("api")
    }
}

